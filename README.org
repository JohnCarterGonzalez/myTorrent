#+title: myTorrent
#+author: JohnCarter Gonzalez
#+description: Entry into Torrent project

*** Bencode (pronounced Bee-encode) is a serialization format used in the BitTorrent protocol.
It is used in torrent files and in communication between trackers and peers.

Bencode supports four data types:

    - strings, are encoded as =<length>:<contents>=. For example, the string ="hello"= is encoded as ="5:hello"=.
    - integers, are encoded as =i<number>e=. For example, =52= is encoded as =i52e= and =-52= is encoded as =i-52e=
    - arrays or lists are encoded as ~l<bencoded_elements>e~. For example, ~["hello", 52]~ would be encoded as ~l5:helloi52ee~. Note that there are no separators between the elements.
    - dictionaries, are encoded as ~d<bencoded_elements>e~. For example, ~{"hello": 123, "foo": "bar",}~ would be encoded as ~d3:foo3:bar5:helloi123ee~ (notice the keys were reorganized).

On parsing torrent files:

A torrent file (also known as a metainfo file) contains a bencoded dictionary with the following keys and values:

    ~announce~:
        URL to a "tracker", which is a central server that keeps track of peers participating in the sharing of a torrent.
    ~info~:
        A dictionary with keys:
            length: size of the file in bytes, for single-file torrents
            name: suggested name to save the file / directory as
            piece length: number of bytes in each piece

    Note: The info dictionary looks slightly different for multi-file torrents. For this challenge, we'll only implement support for single-file torrents.
I need a torrentProtocol for work and also personal use, and instead of using the perfectly fine bittorrent, uTorrent, and friends. I decided, for now, to see what it would be like to build my own, because learning.
